그래프 : Graph, Node(노드), Edge(간선)으로 이루어진 자료 구조
1. 용어
    노드, 점(위치) : node
    간선 : edge
    인접 노드 : adjacent node, 간선에 의해 직접 연결된 노드
    노드의 차수 : degree, 하나의 노드에 인접해 있는 간선의 개수
    진입 차수 : in-degree, 방향 그래프에서 외부에서 오는 간선의 개수
    진출 차수 : out-degree, 방향 그래프에서 외부로 향하는 간선의 개수
    경로 길이 : path length, 경로를 구성하는데 상된 간선의 개수
    단순 경로 : simple path, 경로 중에서 반복되는 정점이 없는 경우
    사이클 : cycle, 단순 경로의 시작 정점과 종료 정점이 동일한 경우

2. 그래프 유형
    무방향 그래프 : Undirected Graph
        서로 대칭적인 관계를 연결해서 나타낸 그래프
        A -> B, B -> A 양방향 그래프
    방향 그래프 : Directed Graph
        간선을 화살표로 표현, 간선에 방향성이 존재
        A -> B 단방향 그래프
    가중치 그래프 : Weighted Graph
        간선에 비용이나 가중치가 부여된 그래프
        A -> B 단방향 그래프
    연결 그래프
        무방향 그래프에 있는 모든 정점쌍에 대해서 항상 경로가 존재하는 경우
    비연결 그래프
        무방향 그래프에서 특정 정점쌍 사이에 경로가 존재하지 않는 경우
    순환 그래프
        단순 경로의 시작 정점과 종료 정점이 동일한 경우
    비순환 그래프
        사이클이 없는 그래프
    완전 그래프
        그래프에 속해있는 모든 정점이 서로 연결되어 있는 그래프
        무방향 완전 그래프
            정점 수 N개이면 간선의 수는 N*(N-1)/2

3. 그래프 만들기
    인접 행렬
        N x N (노드 x 노드)
        int[][] graph
        그래프 구조
            AD 1 2 3 4 5 6
            1  0 1 1 0 0 0
            2  1 0 1 1 0 0
            3  1 1 0 1 1 0
            4  0 1 1 0 1 1
            5  0 0 1 1 0 0
            6  0 0 0 1 0 0
        간선의 수와 상관 없이 노드 * 2 메모리 공간 필요
        인접한 노드를 찾기 위해 전체 순회

    인접 리스트
        노드 -> 간선 리스트
        ArrayList<ArrayList<Integer>> graph
        그래프 구조
            1 -> 2, 3
            2 -> 1, 3, 4
            3 -> 1, 2, 4, 5
            4 -> 2, 3, 5, 6
            5 -> 3, 4
            6 -> 4

4. 그래프 선택 기준
    노드a 와 노드b 간선 여부 확인
        인접 리스트
            인접 리스트가 담아져 있는 ArrayList 각 원소 확인
        인접 행렬
            인접한 노드를 찾기 위해 전체 순회

    공간 복잡도
        인접 리스트
            노드 개수 V와 실제 간선의 개수
        인접 행렬
            노드 개수 V x 노드 개수 V 공간 필요

    간선의 수가 노드 개수 V*2 보다 작으면 희소 그래프 -> 인접 리스트
    간선의 수가 노드 개수 V*2에 비례하면 밀접 그래프 -> 인접 행렬


5. 탐색
    DFS : depth first search, 깊이 우선 탐색
    풀이 방법 : Stack, 재귀 함수

    BFS : breadth first search, 넓이 우선 탐색
    풀이 방법 : Queue

    Dijkstra : 다익스트라, 최단 경로 탐색
    하나의 노드에서 다른 모든 노드로 가는 최단 경로
    현재까지 알고 있던 최단 경로를 계속해서 갱신
